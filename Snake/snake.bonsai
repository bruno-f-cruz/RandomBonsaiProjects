<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:p1="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:wie="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:CreateWindow">
          <gl:Width>900</gl:Width>
          <gl:Height>900</gl:Height>
          <gl:Title>Snake_v0.1</gl:Title>
          <gl:VSync>On</gl:VSync>
          <gl:SwapSync>false</gl:SwapSync>
          <gl:ClearColor>DimGray</gl:ClearColor>
          <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
          <gl:CursorVisible>true</gl:CursorVisible>
          <gl:Location xsi:nil="true" />
          <gl:WindowBorder>Resizable</gl:WindowBorder>
          <gl:WindowState>Normal</gl:WindowState>
          <gl:DisplayDevice>Primary</gl:DisplayDevice>
          <gl:TargetRenderFrequency>30</gl:TargetRenderFrequency>
          <gl:TargetUpdateFrequency xsi:nil="true" />
          <gl:RenderState />
          <gl:GraphicsMode>
            <gl:ColorFormat>
              <gl:Red>8</gl:Red>
              <gl:Green>8</gl:Green>
              <gl:Blue>8</gl:Blue>
              <gl:Alpha>8</gl:Alpha>
            </gl:ColorFormat>
            <gl:Depth>16</gl:Depth>
            <gl:Stencil>0</gl:Stencil>
            <gl:Samples>0</gl:Samples>
            <gl:AccumulatorFormat>
              <gl:Red>0</gl:Red>
              <gl:Green>0</gl:Green>
              <gl:Blue>0</gl:Blue>
              <gl:Alpha>0</gl:Alpha>
            </gl:AccumulatorFormat>
            <gl:Buffers>2</gl:Buffers>
            <gl:Stereo>false</gl:Stereo>
          </gl:GraphicsMode>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.BonVisionResources.bonsai" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="res:LoadResources" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Initialization</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:CreateContinuousUniform">
                <p1:Lower>-1</p1:Lower>
                <p1:Upper>1</p1:Upper>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:SampleArray">
                <p1:Count>2</p1:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Index">
              <Operand xsi:type="IntProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="X" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Index">
              <Operand xsi:type="IntProperty">
                <Value>1</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Y" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0.06561431</cv:X>
                <cv:Y>0.47470817</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="BehaviorSubject">
              <Name>applePosition</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="BehaviorSubject">
              <Name>tailBiting</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0.05</cv:X>
                <cv:Y>0</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="BehaviorSubject">
              <Name>dirVec</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0</cv:X>
                <cv:Y>0</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>from System import Array
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

snakeBodySep = 0.1

@returns(Array[Point2f])
def process(value):
  return Array[Point2f]([Point2f(0,0), Point2f(0 + snakeBodySep ,0), Point2f(0 + snakeBodySep*2 ,0)])
</scr:Script>
            </Expression>
            <Expression xsi:type="BehaviorSubject">
              <Name>snakeBody</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="4" Label="Source1" />
            <Edge From="2" To="6" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="6" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source3" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>updateKeys</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>Left</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>-0.05</cv:X>
                <cv:Y>0</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>Right</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0.05</cv:X>
                <cv:Y>0</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>Up</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0</cv:X>
                <cv:Y>0.05</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>Down</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0</cv:X>
                <cv:Y>-0.05</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>dirVec</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="8" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="8" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="8" Label="Source3" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source4" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.NormalizedView.bonsai" />
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>tailBiting</Name>
            </Expression>
            <Expression xsi:type="BitwiseNot" />
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>DrawApple</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>applePosition</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="LocationX" Selector="X" />
                <Property Name="LocationY" Selector="Y" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawCircle.bonsai">
              <LocationX>0.06561431</LocationX>
              <LocationY>0.47470817</LocationY>
              <Layer>0</Layer>
              <Diameter>0.1</Diameter>
              <ColorR>1</ColorR>
              <ColorG>0</ColorG>
              <ColorB>0</ColorB>
              <ColorA>1</ColorA>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source2" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="2" To="4" Label="Source1" />
            <Edge From="3" To="6" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source2" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>DrawSnake</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawCircleArray.bonsai">
              <LocationX>0</LocationX>
              <LocationY>0</LocationY>
              <Layer>0</Layer>
              <Diameter>0.05</Diameter>
              <ColorR>0</ColorR>
              <ColorG>1</ColorG>
              <ColorB>0</ColorB>
              <ColorA>1</ColorA>
              <PositionData>snakeBody</PositionData>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>drawScore</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>snakeBody</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Length</Selector>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>"Score: " +  it.ToString()</scr:Expression>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Text" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawText.bonsai">
              <Text>Score: 3</Text>
              <Font>Microsoft Sans Serif, 48pt</Font>
              <Alignment>Center</Alignment>
              <LineAlignment>Center</LineAlignment>
              <TextRenderingHint>AntiAliasGridFit</TextRenderingHint>
              <Color>
                <Val0>255</Val0>
                <Val1>255</Val1>
                <Val2>255</Val2>
                <Val3>255</Val3>
              </Color>
              <ExtentX>1</ExtentX>
              <ExtentY>1</ExtentY>
              <LocationX>-0.8</LocationX>
              <LocationY>0.9</LocationY>
              <Layer>0</Layer>
              <Angle>0</Angle>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source2" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="7" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SelectMany">
        <Name>moveBody</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>snakeBody</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>dirVec</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>from System import Array
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f


@returns(Array[Point2f])
def process(value):
  bodySize = len(value.Item1)
  head = value.Item1[0]
  currDir = value.Item2
  X = head.X + currDir.X
  Y = head.Y + currDir.Y

  #wrap around
  if X &gt; 1:
    X -=2
  elif X &lt; -1:
    X +=2

  if Y &gt; 1:
    Y -= 2
  elif Y &lt; -1:
    Y += 2

  newHead = Point2f(X, Y)

  body = []
  body.append(newHead)
  for ii in range(1,bodySize):
    body.append(value.Item1[ii - 1])
  bodyArray = Array[Point2f](body)
  return bodyArray
</scr:Script>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>snakeBody</Name>
            </Expression>
            <Expression xsi:type="Index">
              <Operand xsi:type="IntProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>applePosition</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="Subtract" />
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>math.sqrt(it.X * it.X + it.Y * it.Y)</scr:Expression>
            </Expression>
            <Expression xsi:type="LessThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0.075</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="SelectMany">
              <Name>pickApple</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p1:CreateContinuousUniform">
                      <p1:Lower>-1</p1:Lower>
                      <p1:Upper>1</p1:Upper>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p1:SampleArray">
                      <p1:Count>2</p1:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Index">
                    <Operand xsi:type="IntProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="X" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Index">
                    <Operand xsi:type="IntProperty">
                      <Value>1</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Y" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:CreatePoint2f">
                      <cv:X>-0.6491249</cv:X>
                      <cv:Y>-0.215709209</cv:Y>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="6" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="6" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source3" />
                  <Edge From="6" To="7" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>applePosition</Name>
            </Expression>
            <Expression xsi:type="SelectMany">
              <Name>bodySize++</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>snakeBody</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>dirVec</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:PythonTransform">
                    <scr:Script>from System import Array
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f


@returns(Array[Point2f])
def process(value):
  bodySize = len(value.Item1)
  head = value.Item1[0]
  currDir = value.Item2
  newHead = Point2f(head.X + currDir.X, head.Y + currDir.Y)
  body = []
  body.append(newHead)
  for ii in range(0,bodySize):
    body.append(value.Item1[ii])
  bodyArray = Array[Point2f](body)
  return bodyArray
</scr:Script>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>snakeBody</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source2" />
                  <Edge From="1" To="5" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="7" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>from System import Array
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
import math


@returns(float)
def process(value):
  bodySize = len(value)
  head = value[0]
  distances = []
  for ii in range(1,bodySize):
    newX = head.X - value[ii].X
    newY = head.Y - value[ii].Y
    distances.append(math.sqrt(newX * newX + newY * newY))
  return min(distances)
</scr:Script>
            </Expression>
            <Expression xsi:type="LessThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0.04</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>tailBiting</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source2" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="5" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="7" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source2" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="8" To="10" Label="Source1" />
            <Edge From="8" To="20" Label="Source1" />
            <Edge From="10" To="12" Label="Source1" />
            <Edge From="11" To="12" Label="Source2" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="18" Label="Source1" />
            <Edge From="17" To="19" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="24" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>tailBiting</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>GameOver?</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawText.bonsai">
              <Text>GAME OVER</Text>
              <Font>Microsoft Sans Serif, 72pt</Font>
              <Alignment>Center</Alignment>
              <LineAlignment>Center</LineAlignment>
              <TextRenderingHint>AntiAliasGridFit</TextRenderingHint>
              <Color>
                <Val0>255</Val0>
                <Val1>255</Val1>
                <Val2>255</Val2>
                <Val3>255</Val3>
              </Color>
              <ExtentX>1</ExtentX>
              <ExtentY>1</ExtentY>
              <LocationX>0</LocationX>
              <LocationY>0</LocationY>
              <Layer>0</Layer>
              <Angle>0</Angle>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT1S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CreatePoint2f">
                <cv:X>0</cv:X>
                <cv:Y>0</cv:Y>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>dirVec</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="3" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="6" To="12" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="7" To="9" Label="Source1" />
      <Edge From="7" To="10" Label="Source1" />
      <Edge From="7" To="11" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>